// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

const getFibonacciNumbers = (n: number): number => {
	if (n <= 1) {
		return n;
	} else {
		return getFibonacciNumbers(n - 1) + getFibonacciNumbers(n - 2);
	}
}

const getEvenFibNumbers = (limit: number) => {
	let result = [];
	for (let i = 2; getFibonacciNumbers(i) <= limit; i++) {
		const current = getFibonacciNumbers(i);
		if (current % 2 == 0) {
			result.push(current);
		}
	}
	return result;
}

const sumEvenFibNumbers = (n: number) => {
	const data = getEvenFibNumbers(n);

	let result = 0;

	data.forEach(i => {
		result += i;
	});

	return result;
}

console.log(sumEvenFibNumbers(4000000));

// returns: 4613732
